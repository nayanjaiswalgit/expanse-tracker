# Generated by Django 4.2.24 on 2025-09-21 02:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "plan_type",
                    models.CharField(
                        choices=[
                            ("base", "Base Plan"),
                            ("addon", "Add-on"),
                            ("template", "Template Bundle"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=8)),
                (
                    "billing_cycle",
                    models.CharField(
                        choices=[
                            ("monthly", "Monthly"),
                            ("yearly", "Yearly"),
                            ("one_time", "One Time"),
                        ],
                        default="monthly",
                        max_length=20,
                    ),
                ),
                ("ai_credits_per_month", models.IntegerField(default=0)),
                ("max_transactions_per_month", models.IntegerField(default=0)),
                ("max_accounts", models.IntegerField(default=0)),
                (
                    "storage_gb",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("features", models.JSONField(default=dict)),
                (
                    "discount_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("is_stackable", models.BooleanField(default=True)),
                ("max_quantity", models.PositiveIntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "base_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bundle_plans",
                        to="users.plan",
                    ),
                ),
                (
                    "compatible_with",
                    models.ManyToManyField(blank=True, to="users.plan"),
                ),
                (
                    "included_addons",
                    models.ManyToManyField(
                        blank=True, related_name="parent_templates", to="users.plan"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserAddon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "addon",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="users.plan"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserPlanAssignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "total_monthly_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("effective_limits", models.JSONField(default=dict)),
                (
                    "active_addons",
                    models.ManyToManyField(
                        blank=True, through="users.UserAddon", to="users.plan"
                    ),
                ),
                (
                    "base_plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_assignments",
                        to="users.plan",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plan_assignment",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="useraddon",
            name="user_plan",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_addons",
                to="users.userplanassignment",
            ),
        ),
        migrations.CreateModel(
            name="ActivityLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "activity_type",
                    models.CharField(
                        choices=[
                            ("transaction_execution", "Transaction Execution"),
                            ("plan_change", "Plan Change"),
                            ("ai_usage", "AI Usage"),
                            ("investment_update", "Investment Update"),
                            ("login", "User Login"),
                            ("password_change", "Password Change"),
                            ("data_export", "Data Export"),
                            ("api_access", "API Access"),
                        ],
                        max_length=30,
                    ),
                ),
                ("object_type", models.CharField(blank=True, max_length=50)),
                ("object_id", models.CharField(blank=True, max_length=50)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("pending", "Pending"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="completed",
                        max_length=20,
                    ),
                ),
                ("details", models.JSONField(default=dict)),
                ("metadata", models.JSONField(default=dict)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.TextField(blank=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="activity_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "subscription_status",
                    models.CharField(
                        choices=[
                            ("trial", "Trial"),
                            ("active", "Active"),
                            ("cancelled", "Cancelled"),
                            ("expired", "Expired"),
                            ("suspended", "Suspended"),
                        ],
                        default="trial",
                        max_length=20,
                    ),
                ),
                ("subscription_start_date", models.DateTimeField(auto_now_add=True)),
                ("subscription_end_date", models.DateTimeField(blank=True, null=True)),
                ("is_auto_renew", models.BooleanField(default=True)),
                ("ai_credits_remaining", models.IntegerField(default=100)),
                ("ai_credits_used_this_month", models.IntegerField(default=0)),
                ("transactions_this_month", models.IntegerField(default=0)),
                (
                    "last_reset_date",
                    models.DateField(default=django.utils.timezone.now),
                ),
                (
                    "preferred_ai_provider",
                    models.CharField(
                        choices=[
                            ("system", "System Default"),
                            ("openai", "OpenAI"),
                            ("ollama", "Ollama"),
                        ],
                        default="system",
                        max_length=20,
                    ),
                ),
                ("openai_api_key", models.TextField(blank=True)),
                (
                    "openai_model",
                    models.CharField(default="gpt-3.5-turbo", max_length=50),
                ),
                ("ollama_endpoint", models.URLField(default="http://localhost:11434")),
                ("ollama_model", models.CharField(default="llama2", max_length=50)),
                ("enable_ai_suggestions", models.BooleanField(default=True)),
                ("enable_ai_categorization", models.BooleanField(default=True)),
                ("enable_ai_invoice_generation", models.BooleanField(default=True)),
                ("total_ai_credits", models.IntegerField(default=100)),
                ("total_transactions_limit", models.IntegerField(default=1000)),
                ("total_accounts_limit", models.IntegerField(default=3)),
                (
                    "total_storage_gb",
                    models.DecimalField(decimal_places=2, default=1, max_digits=8),
                ),
                ("custom_features", models.JSONField(default=dict)),
                (
                    "total_monthly_cost",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("default_currency", models.CharField(default="USD", max_length=3)),
                ("timezone", models.CharField(default="UTC", max_length=50)),
                ("language", models.CharField(default="en", max_length=10)),
                ("onboarding_step", models.PositiveIntegerField(default=0)),
                ("is_onboarded", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "current_plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="users.plan",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["subscription_status"],
                        name="users_userp_subscri_27f920_idx",
                    ),
                    models.Index(
                        fields=["subscription_end_date"],
                        name="users_userp_subscri_d28475_idx",
                    ),
                ],
            },
        ),
        migrations.AlterUniqueTogether(
            name="useraddon",
            unique_together={("user_plan", "addon")},
        ),
        migrations.AddIndex(
            model_name="plan",
            index=models.Index(
                fields=["plan_type", "is_active"], name="users_plan_plan_ty_4232f9_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="plan",
            index=models.Index(fields=["price"], name="users_plan_price_4fa707_idx"),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["user", "activity_type"], name="users_activ_user_id_67fad2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["user", "created_at"], name="users_activ_user_id_f1f5e0_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(
                fields=["object_type", "object_id"],
                name="users_activ_object__26f509_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="activitylog",
            index=models.Index(fields=["status"], name="users_activ_status_294d96_idx"),
        ),
    ]
