# Generated by Django 4.2.24 on 2025-09-21 02:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Account",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                (
                    "account_type",
                    models.CharField(
                        choices=[
                            ("checking", "Checking"),
                            ("savings", "Savings"),
                            ("credit", "Credit Card"),
                            ("investment", "Investment"),
                            ("loan", "Loan"),
                            ("cash", "Cash"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "balance",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("is_active", models.BooleanField(default=True)),
                ("account_number", models.CharField(blank=True, max_length=50)),
                ("institution", models.CharField(blank=True, max_length=255)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=100)),
                (
                    "category_type",
                    models.CharField(
                        choices=[
                            ("income", "Income"),
                            ("expense", "Expense"),
                            ("both", "Both"),
                        ],
                        default="expense",
                        max_length=10,
                    ),
                ),
                ("color", models.CharField(default="#0066CC", max_length=7)),
                ("icon", models.CharField(blank=True, max_length=50)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subcategories",
                        to="finance.category",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Categories",
            },
        ),
        migrations.CreateModel(
            name="ExpenseGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "group_type",
                    models.CharField(
                        choices=[
                            ("one-to-one", "One-to-One"),
                            ("multi-person", "Multi-Person"),
                        ],
                        default="multi-person",
                        max_length=20,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_expense_groups",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Group",
                "verbose_name_plural": "Expense Groups",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="GroupExpense",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="USD", max_length=3)),
                (
                    "split_method",
                    models.CharField(
                        choices=[
                            ("equal", "Split Equally"),
                            ("percentage", "Split by Percentage"),
                            ("amount", "Split by Amount"),
                            ("shares", "Split by Shares"),
                        ],
                        default="equal",
                        max_length=20,
                    ),
                ),
                ("date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("settled", "Settled"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_expenses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expenses",
                        to="finance.expensegroup",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Investment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("symbol", models.CharField(max_length=20)),
                ("name", models.CharField(max_length=255)),
                (
                    "investment_type",
                    models.CharField(
                        choices=[
                            ("stock", "Stock"),
                            ("bond", "Bond"),
                            ("etf", "ETF"),
                            ("mutual_fund", "Mutual Fund"),
                            ("crypto", "Cryptocurrency"),
                            ("commodity", "Commodity"),
                            ("real_estate", "Real Estate"),
                            ("other", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("sector", models.CharField(blank=True, max_length=100)),
                (
                    "current_price",
                    models.DecimalField(decimal_places=4, default=0, max_digits=12),
                ),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("last_price_update", models.DateTimeField(blank=True, null=True)),
                ("price_source", models.CharField(default="manual", max_length=50)),
                ("auto_update_price", models.BooleanField(default=False)),
                ("portfolio_name", models.CharField(default="Default", max_length=255)),
                (
                    "portfolio_weight",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                ("description", models.TextField(blank=True)),
                (
                    "risk_level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("low", "Low Risk"),
                            ("moderate", "Moderate Risk"),
                            ("high", "High Risk"),
                            ("very_high", "Very High Risk"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "dividend_yield",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("market_cap", models.BigIntegerField(blank=True, null=True)),
                (
                    "pe_ratio",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "beta",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=6, null=True
                    ),
                ),
                (
                    "fifty_two_week_high",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "fifty_two_week_low",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=50)),
                ("color", models.CharField(default="#6B7280", max_length=7)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "name")},
            },
        ),
        migrations.CreateModel(
            name="GroupExpenseShare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("share_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "paid_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("payment_date", models.DateField(blank=True, null=True)),
                ("notes", models.TextField(blank=True)),
                (
                    "group_expense",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="shares",
                        to="finance.groupexpense",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_shares",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Goal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(blank=True)),
                (
                    "goal_type",
                    models.CharField(
                        choices=[
                            ("savings", "Savings Goal"),
                            ("debt_reduction", "Debt Reduction"),
                            ("investment", "Investment Goal"),
                            ("expense_reduction", "Expense Reduction"),
                        ],
                        max_length=20,
                    ),
                ),
                ("target_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "current_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("target_date", models.DateField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("completed", "Completed"),
                            ("paused", "Paused"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ExpenseGroupMembership",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "role",
                    models.CharField(
                        choices=[("member", "Member"), ("admin", "Admin")],
                        default="member",
                        max_length=20,
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="memberships",
                        to="finance.expensegroup",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="expense_group_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Expense Group Membership",
                "verbose_name_plural": "Expense Group Memberships",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("notes", models.TextField(blank=True)),
                (
                    "external_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("cancelled", "Cancelled"),
                            ("pending", "Pending"),
                            ("failed", "Failed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_category",
                    models.CharField(
                        choices=[
                            ("standard", "Standard Transaction"),
                            ("investment", "Investment Transaction"),
                            ("lending", "Lending Transaction"),
                            ("recurring_template", "Recurring Template"),
                            ("group_expense", "Group Expense"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("income", "Income"),
                            ("expense", "Expense"),
                            ("transfer", "Transfer"),
                            ("buy", "Buy Investment"),
                            ("sell", "Sell Investment"),
                            ("dividend", "Dividend"),
                            ("lend", "Lend Money"),
                            ("borrow", "Borrow Money"),
                            ("repayment", "Repayment"),
                        ],
                        default="expense",
                        max_length=20,
                    ),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=15, null=True
                    ),
                ),
                (
                    "price_per_unit",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=12, null=True
                    ),
                ),
                (
                    "fees",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("due_date", models.DateField(blank=True, null=True)),
                (
                    "interest_rate",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                ("is_template", models.BooleanField(default=False)),
                ("template_name", models.CharField(blank=True, max_length=255)),
                (
                    "frequency",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("biweekly", "Bi-weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("yearly", "Yearly"),
                        ],
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "frequency_interval",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("max_executions", models.PositiveIntegerField(blank=True, null=True)),
                ("next_execution_date", models.DateField(blank=True, null=True)),
                ("is_active_template", models.BooleanField(default=False)),
                ("is_manual", models.BooleanField(default=False)),
                ("auto_categorize", models.BooleanField(default=True)),
                ("execution_conditions", models.JSONField(blank=True, default=dict)),
                (
                    "merchant_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("original_description", models.TextField(blank=True, null=True)),
                ("verified", models.BooleanField(default=False)),
                (
                    "gmail_message_id",
                    models.CharField(
                        blank=True, max_length=255, null=True, unique=True
                    ),
                ),
                ("metadata", models.JSONField(blank=True, default=dict)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="finance.account",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="transactions",
                        to="finance.category",
                    ),
                ),
                (
                    "contact_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="lending_transactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "group_expense",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="finance.groupexpense",
                    ),
                ),
                (
                    "investment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transactions",
                        to="finance.investment",
                    ),
                ),
                (
                    "suggested_category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="suggested_transactions",
                        to="finance.category",
                    ),
                ),
                (
                    "tags",
                    models.ManyToManyField(
                        blank=True, related_name="transactions", to="finance.tag"
                    ),
                ),
                (
                    "transfer_account",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transfer_transactions",
                        to="finance.account",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "date"], name="finance_tra_user_id_3294c0_idx"
                    ),
                    models.Index(
                        fields=["user", "transaction_category"],
                        name="finance_tra_user_id_02ba3a_idx",
                    ),
                    models.Index(
                        fields=["user", "transaction_type"],
                        name="finance_tra_user_id_75a566_idx",
                    ),
                    models.Index(
                        fields=["account"], name="finance_tra_account_551e0b_idx"
                    ),
                    models.Index(
                        fields=["category"], name="finance_tra_categor_bbdf49_idx"
                    ),
                    models.Index(
                        fields=["investment"], name="finance_tra_investm_16eed3_idx"
                    ),
                    models.Index(
                        fields=["contact_user"], name="finance_tra_contact_71dd32_idx"
                    ),
                    models.Index(
                        fields=["is_template", "is_active_template"],
                        name="finance_tra_is_temp_7eb893_idx",
                    ),
                    models.Index(
                        fields=["next_execution_date", "is_active_template"],
                        name="finance_tra_next_ex_725039_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "invoice_type",
                    models.CharField(
                        choices=[
                            ("standard", "Standard Invoice"),
                            ("recurring", "Recurring Invoice"),
                            ("quote", "Quote"),
                            ("receipt", "Receipt"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("client_name", models.CharField(max_length=255)),
                ("client_email", models.EmailField(blank=True, max_length=254)),
                ("client_address", models.TextField(blank=True)),
                ("description", models.TextField()),
                ("amount", models.DecimalField(decimal_places=2, max_digits=12)),
                (
                    "tax_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=12)),
                ("currency", models.CharField(default="USD", max_length=3)),
                ("issue_date", models.DateField()),
                ("due_date", models.DateField()),
                ("paid_date", models.DateField(blank=True, null=True)),
                ("generated_by_ai", models.BooleanField(default=False)),
                (
                    "ai_confidence_score",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "pdf_file",
                    models.FileField(blank=True, null=True, upload_to="invoices/"),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(
                        fields=["user", "status"], name="finance_inv_user_id_a0609d_idx"
                    ),
                    models.Index(
                        fields=["issue_date"], name="finance_inv_issue_d_3b7e1d_idx"
                    ),
                    models.Index(
                        fields=["due_date"], name="finance_inv_due_dat_b93853_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="investment",
            index=models.Index(
                fields=["user", "is_active"], name="finance_inv_user_id_fa9777_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="investment",
            index=models.Index(
                fields=["symbol", "investment_type"],
                name="finance_inv_symbol_6c19ec_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="investment",
            index=models.Index(
                fields=["portfolio_name"], name="finance_inv_portfol_50d93e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="investment",
            index=models.Index(fields=["sector"], name="finance_inv_sector_3940a6_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="investment",
            unique_together={("user", "symbol", "investment_type")},
        ),
        migrations.AddIndex(
            model_name="groupexpense",
            index=models.Index(
                fields=["group", "status"], name="finance_gro_group_i_3572ac_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="groupexpense",
            index=models.Index(fields=["date"], name="finance_gro_date_c5d951_idx"),
        ),
        migrations.AddIndex(
            model_name="goal",
            index=models.Index(
                fields=["user", "status"], name="finance_goa_user_id_09c835_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="goal",
            index=models.Index(
                fields=["goal_type"], name="finance_goa_goal_ty_202a71_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="expensegroupmembership",
            unique_together={("group", "user")},
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["user", "category_type"], name="finance_cat_user_id_11ae32_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="category",
            index=models.Index(
                fields=["parent"], name="finance_cat_parent__71eced_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["user", "is_active"], name="finance_acc_user_id_11c77c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="account",
            index=models.Index(
                fields=["account_type"], name="finance_acc_account_3b66f3_idx"
            ),
        ),
    ]
